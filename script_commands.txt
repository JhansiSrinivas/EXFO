 
 fdisk -H 64 -S 32 -u=cylinders /dev/loop2
 fdisk -l
 kpartx -a -v /dev/loop2
 mke2fs -j -L bootfs /dev/mapper/loop2p1
  tune2fs -c 0 -i 0 /dev/mapper/loop2p1
  mke2fs -j -L rootfs /dev/mapper/loop2p2
  tune2fs -c 0 -i 0 /dev/mapper/loop2p2
  mke2fs -j -L rootfs /dev/mapper/loop2p3
  tune2fs -c 0 -i 0 /dev/mapper/loop2p3
  mount -t ext3 /dev/mapper/loop2p1 /mnt/loop2p1
  mount -t ext3 /dev/mapper/loop2p2 /mnt/loop2p2
  mount -t ext3 /dev/mapper/loop2p3 /mnt/loop2p3
  tar zxvf ../../../lin-nv40b-x86_64-r/monolith/rootfs.tgz -C /mnt/loop2p2
  chown -Rh 0:0 /mnt/loop2p2/* /mnt/loop2p2/.profile
  . /mnt/loop2p2/boot/install-tools/setup-env.sh
  /mnt/loop2p2/boot/install-tools/exec-post-setup.sh no 3.18.12 nv40b bvm x86_64 /mnt/loop2p2 sda sda2 no
  mkdir -p /mnt/loop2p1/boot/grub
  # Create grub.cfg
  924     (    echo \#;    echo \# Grub file generated by the bvm-mkimg.sh script;    echo \#;    echo "set default=0";    echo "set timeout=10";    echo "insmod ext2";    echo;    echo "menuentry 'Verifier' {";    echo "  set root='(hd0,msdos2)'";    echo "  linux /boot/vmlinuz ro root=/dev/sda2 rootflags=data=journal rootfstype=ext3 console=tty0 console=ttyS0,115200n8 console=ttyS1,115200n8 3";    echo "  initrd /boot/initrd.img";    echo "  set debug= all";    echo "}";    echo;    echo "menuentry 'Restore Factory Defaults' {";    echo "  set root='(hd0,2)'";    echo "  linux /boot/vmlinuz ro root=/dev/sda2 rootflags=data=journal rootfstype=ext3 console=tty0 console=ttyS0,115200n8 console=ttyS1,115200n8 5";    echo "  initrd /boot/initrd.img";    echo "}";    echo;    echo "menuentry 'Diagnostics' {";    echo "  set root='(hd0,2)'";    echo "  linux /boot/vmlinuz ro root=/dev/sda2 rootflags=data=journal rootfstype=ext3 console=tty0 console=ttyS0,115200n8 console=ttyS1,115200n8 2";    echo "  initrd /boot/initrd.img";    echo "}";    echo;    echo "menuentry 'Verifier Recovery' {";    echo "  set root='(hd0,3)'";    echo "  linux /boot/vmlinuz ro root=/dev/sda3 rootflags=data=journal rootfstype=ext3 console=tty0 console=ttyS0,115200n8 console=ttyS1,115200n8 4";    echo "  initrd /boot/initrd.img";    echo "}";    ) >/mnt/loop2p1/boot/grub/grub.cfg
  ll /mnt/loop2p1/boot/
 cd grub/
 ll
 ll /mnt/loop2p1/boot/
 ll /mnt/loop2p1/boot/grub/
 vi  /mnt/loop2p1/boot/grub/grub.cfg
 cp /mnt/loop2p1/boot/grub/grub.cfg /mnt/loop2p1/boot/grub/.grub.cfg
 ln -s /mnt/loop2p1/boot/grub /mnt/loop2p1/boot/grub2
 grub2-install --boot-directory=/mnt/loop2p1/boot /dev/loop2
 mkdir -p /mnt/loop2p1/brix/conf
 cat << EOF >/mnt/loop2p1/brix/conf/sys.conf
 key-data = info.vkx
 use-dcf = yes
 oem-id = brix
 EOF
 cd ..
 cp /mnt/loop2p1/boot/grub/grub.cfg /mnt/loop2p1/boot/grub/.grub.cfg
 ln -s /mnt/loop2p1/boot/grub /mnt/loop2p1/boot/grub2
 ls
 grub2-install --boot-directory=/mnt/loop2p1/boot /dev/loop2
 mkdir -p /mnt/loop2p1/brix/conf
 cat << EOF >/mnt/loop2p1/brix/conf/sys.conf
 key-data = info.vkx
 use-dcf = yes
 oem-id = brix
 EOF
 mkdir /mnt/loop2p1/brix/conf/dcf
 cp $BVM_MKIMG_DCF /mnt/loop2p1/brix/conf/dcf/dcf.xml
 ll
 ls -l /mnt/loop2p1/brix/conf/
 vi  -l /mnt/loop2p1/brix/conf/sys.conf
 cp ../../../../image/lin-nv40b-x86_64-r/710011644928.vkr ./info.vkr
 ll
 encrypt-vkr -o ${TMPDIR} ${TMPDIR}/info.vkr
 encrypt-vkr -o /tmp/ info.vkr
 cd /root/software/
 find . -name "encrypt-vkr"
 cd -
 /root/software/exports/lin-vfr-x86_64-r/encrypt-vkr -o /tmp/ info.vkr
 ll /tmp/
 cp /tmp/info.vkx /mnt/loop2p1/brix/conf/info.vkx
 touch monolith.vmdk
 sync
 qemu-img convert -f raw -O vmdk monolith.img monolith.vmdk
